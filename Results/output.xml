<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.7.1 on win32)" generated="20220401 11:09:46.991" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="C:\developpement\mon_api\tests">
<suite id="s1-s1" name="Api" source="C:\developpement\mon_api\tests\api.robot">
<test id="s1-s1-t1" name="Inscrire un user dans la BD">
<kw name="Verifier l'exitance de l'utilisateur" library="signupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20220401 11:09:48.675" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20220401 11:09:48.288" endtime="20220401 11:09:48.686"/>
</kw>
<kw name="Row Count Is 0" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback.</doc>
<msg timestamp="20220401 11:09:48.688" level="INFO">Executing : Row Count Is 0  |  select id from users where username = 'Tryy' and password = md5('Try!2001') </msg>
<msg timestamp="20220401 11:09:48.688" level="INFO">Executing : Row Count  |  select id from users where username = 'Tryy' and password = md5('Try!2001') </msg>
<status status="PASS" starttime="20220401 11:09:48.686" endtime="20220401 11:09:48.691"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.287" endtime="20220401 11:09:48.692"/>
</kw>
<kw name="Inscription user par une requete Http POST" library="signupBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session1</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220401 11:09:48.694" level="INFO">Creating Session using : alias=session1, url=http://localhost/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220401 11:09:48.694" endtime="20220401 11:09:48.695"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220401 11:09:48.696" level="INFO">${data} = {'username': 'Tryy', 'password': 'Try!2001'}</msg>
<status status="PASS" starttime="20220401 11:09:48.695" endtime="20220401 11:09:48.696"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/x-vvv-form-urlenooded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220401 11:09:48.696" level="INFO">${headers} = {'Content-Type': 'application/x-vvv-form-urlenooded'}</msg>
<status status="PASS" starttime="20220401 11:09:48.696" endtime="20220401 11:09:48.696"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session1</arg>
<arg>signup.php</arg>
<arg>data=${data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220401 11:09:48.732" level="INFO">POST Request : url=http://localhost/demo/api/user/signup.php 
 path_url=/demo/api/user/signup.php 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '33', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=username=Tryy&amp;password=Try%212001 
 </msg>
<msg timestamp="20220401 11:09:48.732" level="INFO">POST Response : url=http://localhost/demo/api/user/signup.php 
 status=200, reason=OK 
 headers={'Date': 'Fri, 01 Apr 2022 11:09:48 GMT', 'Server': 'Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.4', 'X-Powered-By': 'PHP/8.1.4', 'Content-Length': '76', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":true,"message":"Successfully Signup!","id":"54","username":"Tryy"} 
 </msg>
<msg timestamp="20220401 11:09:48.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.697" endtime="20220401 11:09:48.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220401 11:09:48.756" level="INFO">${json} = {'status': True, 'message': 'Successfully Signup!', 'id': '54', 'username': 'Tryy'}</msg>
<status status="PASS" starttime="20220401 11:09:48.733" endtime="20220401 11:09:48.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220401 11:09:48.756" level="INFO">{'status': True, 'message': 'Successfully Signup!', 'id': '54', 'username': 'Tryy'}</msg>
<status status="PASS" starttime="20220401 11:09:48.756" endtime="20220401 11:09:48.756"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220401 11:09:48.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.757" endtime="20220401 11:09:48.758"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.692" endtime="20220401 11:09:48.758"/>
</kw>
<kw name="Verifier que l'utilisateur es ajouÃ© dans la bd" library="signupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20220401 11:09:48.760" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20220401 11:09:48.760" endtime="20220401 11:09:48.765"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20220401 11:09:48.766" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'Tryy' and password = md5('Try!2001')  |  1 </msg>
<msg timestamp="20220401 11:09:48.766" level="INFO">Executing : Row Count  |  select id from users where username = 'Tryy' and password = md5('Try!2001') </msg>
<status status="PASS" starttime="20220401 11:09:48.765" endtime="20220401 11:09:48.768"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.759" endtime="20220401 11:09:48.768"/>
</kw>
<tag>First</tag>
<status status="PASS" starttime="20220401 11:09:48.287" endtime="20220401 11:09:48.771"/>
</test>
<test id="s1-s1-t2" name="Inscrire le meme user">
<kw name="Inscription meme user par une requete Http POST" library="signupBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session2</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220401 11:09:48.775" level="INFO">Creating Session using : alias=session2, url=http://localhost/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220401 11:09:48.775" endtime="20220401 11:09:48.776"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220401 11:09:48.777" level="INFO">${data} = {'username': 'Tryy', 'password': 'Try!2001'}</msg>
<status status="PASS" starttime="20220401 11:09:48.776" endtime="20220401 11:09:48.777"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/x-vvv-form-urlenooded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220401 11:09:48.778" level="INFO">${headers} = {'Content-Type': 'application/x-vvv-form-urlenooded'}</msg>
<status status="PASS" starttime="20220401 11:09:48.777" endtime="20220401 11:09:48.778"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session2</arg>
<arg>signup.php</arg>
<arg>data=${data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220401 11:09:48.795" level="INFO">POST Request : url=http://localhost/demo/api/user/signup.php 
 path_url=/demo/api/user/signup.php 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '33', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=username=Tryy&amp;password=Try%212001 
 </msg>
<msg timestamp="20220401 11:09:48.795" level="INFO">POST Response : url=http://localhost/demo/api/user/signup.php 
 status=200, reason=OK 
 headers={'Date': 'Fri, 01 Apr 2022 11:09:48 GMT', 'Server': 'Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.4', 'X-Powered-By': 'PHP/8.1.4', 'Content-Length': '53', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":false,"message":"Username already exists!"} 
 </msg>
<msg timestamp="20220401 11:09:48.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.778" endtime="20220401 11:09:48.795"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220401 11:09:48.796" level="INFO">${json} = {'status': False, 'message': 'Username already exists!'}</msg>
<status status="PASS" starttime="20220401 11:09:48.795" endtime="20220401 11:09:48.796"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220401 11:09:48.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.796" endtime="20220401 11:09:48.796"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['message']}</arg>
<arg>Username already exists!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220401 11:09:48.797" endtime="20220401 11:09:48.797"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.774" endtime="20220401 11:09:48.797"/>
</kw>
<kw name="Verifier que user n'est pas dupliquÃ©" library="signupBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20220401 11:09:48.799" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20220401 11:09:48.798" endtime="20220401 11:09:48.802"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20220401 11:09:48.803" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'Tryy' and password = md5('Try!2001')  |  1 </msg>
<msg timestamp="20220401 11:09:48.803" level="INFO">Executing : Row Count  |  select id from users where username = 'Tryy' and password = md5('Try!2001') </msg>
<status status="PASS" starttime="20220401 11:09:48.802" endtime="20220401 11:09:48.805"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.798" endtime="20220401 11:09:48.805"/>
</kw>
<tag>Second</tag>
<status status="PASS" starttime="20220401 11:09:48.773" endtime="20220401 11:09:48.805"/>
</test>
<test id="s1-s1-t3" name="Authentifier user">
<kw name="Verifier que user existe" library="loginBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20220401 11:09:48.809" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20220401 11:09:48.808" endtime="20220401 11:09:48.812"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20220401 11:09:48.813" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'Tryy' and password = md5('Try!2001')  |  1 </msg>
<msg timestamp="20220401 11:09:48.813" level="INFO">Executing : Row Count  |  select id from users where username = 'Tryy' and password = md5('Try!2001') </msg>
<status status="PASS" starttime="20220401 11:09:48.812" endtime="20220401 11:09:48.814"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.807" endtime="20220401 11:09:48.815"/>
</kw>
<kw name="Authentifier user" library="loginBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session3</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220401 11:09:48.818" level="INFO">Creating Session using : alias=session3, url=http://localhost/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220401 11:09:48.817" endtime="20220401 11:09:48.819"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session3</arg>
<arg>url=login.php?username=${USERNAME}&amp;password=${PASSWORD}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220401 11:09:48.843" level="INFO">GET Request : url=http://localhost/demo/api/user/login.php?username=Tryy&amp;password=Try!2001 
 path_url=/demo/api/user/login.php?username=Tryy&amp;password=Try!2001 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220401 11:09:48.844" level="INFO">GET Response : url=http://localhost/demo/api/user/login.php?username=Tryy&amp;password=Try!2001 
 status=200, reason=OK 
 headers={'Date': 'Fri, 01 Apr 2022 11:09:48 GMT', 'Server': 'Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.4', 'X-Powered-By': 'PHP/8.1.4', 'Content-Length': '73', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":true,"message":"Successfully Login!","id":54,"username":"Tryy"} 
 </msg>
<msg timestamp="20220401 11:09:48.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.819" endtime="20220401 11:09:48.844"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220401 11:09:48.847" level="INFO">${json} = {'status': True, 'message': 'Successfully Login!', 'id': 54, 'username': 'Tryy'}</msg>
<status status="PASS" starttime="20220401 11:09:48.845" endtime="20220401 11:09:48.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220401 11:09:48.848" level="INFO">{'status': True, 'message': 'Successfully Login!', 'id': 54, 'username': 'Tryy'}</msg>
<status status="PASS" starttime="20220401 11:09:48.848" endtime="20220401 11:09:48.848"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220401 11:09:48.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.848" endtime="20220401 11:09:48.849"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['message']}</arg>
<arg>Successfully Login!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220401 11:09:48.849" endtime="20220401 11:09:48.850"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.816" endtime="20220401 11:09:48.851"/>
</kw>
<tag>Third</tag>
<status status="PASS" starttime="20220401 11:09:48.806" endtime="20220401 11:09:48.851"/>
</test>
<test id="s1-s1-t4" name="Suprimer user">
<kw name="Supprimer user" library="loginBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20220401 11:09:48.853" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20220401 11:09:48.853" endtime="20220401 11:09:48.855"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>DELETE FROM users WHERE username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20220401 11:09:48.856" level="INFO">Executing : Execute SQL String  |  DELETE FROM users WHERE username = 'Tryy' and password = md5('Try!2001') </msg>
<status status="PASS" starttime="20220401 11:09:48.856" endtime="20220401 11:09:48.859"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20220401 11:09:48.859" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20220401 11:09:48.859" endtime="20220401 11:09:48.860"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.853" endtime="20220401 11:09:48.861"/>
</kw>
<kw name="Authentifier user inexistant" library="loginBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session4</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220401 11:09:48.864" level="INFO">Creating Session using : alias=session4, url=http://localhost/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220401 11:09:48.863" endtime="20220401 11:09:48.864"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session4</arg>
<arg>url=login.php?username=${USERNAME}&amp;password=${PASSWORD}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220401 11:09:48.894" level="INFO">GET Request : url=http://localhost/demo/api/user/login.php?username=Tryy&amp;password=Try!2001 
 path_url=/demo/api/user/login.php?username=Tryy&amp;password=Try!2001 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220401 11:09:48.894" level="INFO">GET Response : url=http://localhost/demo/api/user/login.php?username=Tryy&amp;password=Try!2001 
 status=200, reason=OK 
 headers={'Date': 'Fri, 01 Apr 2022 11:09:48 GMT', 'Server': 'Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.4', 'X-Powered-By': 'PHP/8.1.4', 'Content-Length': '58', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":false,"message":"Invalid Username or Password!"} 
 </msg>
<msg timestamp="20220401 11:09:48.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.864" endtime="20220401 11:09:48.895"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220401 11:09:48.897" level="INFO">${json} = {'status': False, 'message': 'Invalid Username or Password!'}</msg>
<status status="PASS" starttime="20220401 11:09:48.895" endtime="20220401 11:09:48.897"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220401 11:09:48.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220401 11:09:48.897" endtime="20220401 11:09:48.899"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['message']}</arg>
<arg>Invalid Username or Password!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220401 11:09:48.900" endtime="20220401 11:09:48.901"/>
</kw>
<status status="PASS" starttime="20220401 11:09:48.862" endtime="20220401 11:09:48.901"/>
</kw>
<tag>Fourth</tag>
<status status="PASS" starttime="20220401 11:09:48.852" endtime="20220401 11:09:48.902"/>
</test>
<status status="PASS" starttime="20220401 11:09:47.062" endtime="20220401 11:09:48.903"/>
</suite>
<status status="PASS" starttime="20220401 11:09:46.994" endtime="20220401 11:09:48.907"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">First</stat>
<stat pass="1" fail="0" skip="0">Fourth</stat>
<stat pass="1" fail="0" skip="0">Second</stat>
<stat pass="1" fail="0" skip="0">Third</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Api">Tests.Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
